<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0108.1039                               -->
<workbook original-version='18.1' source-build='2021.4.3 (20214.22.0108.1039)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='ready_salary' inline='true' name='federated.0o2cl5h06ly0vp18hy58a0z3sslm' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='country_vaccinations_cleaned' name='textscan.0emn5nk0itom1b1fuhejj06a0y23'>
            <connection class='textscan' directory='/Users/yasamanemami/Documents/DATA-230 Sec 23 - Data Visualization/hw1' filename='country_vaccinations_cleaned.csv' password='' server='' />
          </named-connection>
          <named-connection caption='country_vaccinations_by_manufacturer' name='textscan.1i0dqhi15nq2bg1dcjoht1saoyry'>
            <connection class='textscan' directory='/Users/yasamanemami/Documents/DATA-230 Sec 23 - Data Visualization/hw1/covid ds' filename='country_vaccinations_by_manufacturer.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='left' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[country_vaccinations_cleaned.csv].[date]' />
                <expression op='[country_vaccinations_by_manufacturer.csv].[date]' />
              </expression>
              <expression op='='>
                <expression op='[country_vaccinations_cleaned.csv].[country]' />
                <expression op='[country_vaccinations_by_manufacturer.csv].[location]' />
              </expression>
            </expression>
          </clause>
          <relation connection='textscan.0emn5nk0itom1b1fuhejj06a0y23' name='country_vaccinations_cleaned.csv' table='[country_vaccinations_cleaned#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='country' ordinal='1' />
              <column datatype='string' name='iso_code' ordinal='2' />
              <column datatype='date' name='date' ordinal='3' />
              <column datatype='real' name='total_vaccinations' ordinal='4' />
              <column datatype='real' name='people_vaccinated' ordinal='5' />
              <column datatype='real' name='people_fully_vaccinated' ordinal='6' />
              <column datatype='real' name='daily_vaccinations_raw' ordinal='7' />
              <column datatype='real' name='daily_vaccinations' ordinal='8' />
              <column datatype='real' name='total_vaccinations_per_hundred' ordinal='9' />
              <column datatype='real' name='people_vaccinated_per_hundred' ordinal='10' />
              <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='11' />
              <column datatype='real' name='daily_vaccinations_per_million' ordinal='12' />
              <column datatype='string' name='vaccines' ordinal='13' />
              <column datatype='string' name='source_name' ordinal='14' />
              <column datatype='string' name='source_website' ordinal='15' />
              <column datatype='integer' name='year' ordinal='16' />
              <column datatype='integer' name='month' ordinal='17' />
            </columns>
          </relation>
          <relation connection='textscan.1i0dqhi15nq2bg1dcjoht1saoyry' name='country_vaccinations_by_manufacturer.csv' table='[country_vaccinations_by_manufacturer#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='location' ordinal='0' />
              <column datatype='date' name='date' ordinal='1' />
              <column datatype='string' name='vaccine' ordinal='2' />
              <column datatype='integer' name='total_vaccinations' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='left' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[country_vaccinations_cleaned.csv].[date]' />
                <expression op='[country_vaccinations_by_manufacturer.csv].[date]' />
              </expression>
              <expression op='='>
                <expression op='[country_vaccinations_cleaned.csv].[country]' />
                <expression op='[country_vaccinations_by_manufacturer.csv].[location]' />
              </expression>
            </expression>
          </clause>
          <relation connection='textscan.0emn5nk0itom1b1fuhejj06a0y23' name='country_vaccinations_cleaned.csv' table='[country_vaccinations_cleaned#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='country' ordinal='1' />
              <column datatype='string' name='iso_code' ordinal='2' />
              <column datatype='date' name='date' ordinal='3' />
              <column datatype='real' name='total_vaccinations' ordinal='4' />
              <column datatype='real' name='people_vaccinated' ordinal='5' />
              <column datatype='real' name='people_fully_vaccinated' ordinal='6' />
              <column datatype='real' name='daily_vaccinations_raw' ordinal='7' />
              <column datatype='real' name='daily_vaccinations' ordinal='8' />
              <column datatype='real' name='total_vaccinations_per_hundred' ordinal='9' />
              <column datatype='real' name='people_vaccinated_per_hundred' ordinal='10' />
              <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='11' />
              <column datatype='real' name='daily_vaccinations_per_million' ordinal='12' />
              <column datatype='string' name='vaccines' ordinal='13' />
              <column datatype='string' name='source_name' ordinal='14' />
              <column datatype='string' name='source_website' ordinal='15' />
              <column datatype='integer' name='year' ordinal='16' />
              <column datatype='integer' name='month' ordinal='17' />
            </columns>
          </relation>
          <relation connection='textscan.1i0dqhi15nq2bg1dcjoht1saoyry' name='country_vaccinations_by_manufacturer.csv' table='[country_vaccinations_by_manufacturer#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='location' ordinal='0' />
              <column datatype='date' name='date' ordinal='1' />
              <column datatype='string' name='vaccine' ordinal='2' />
              <column datatype='integer' name='total_vaccinations' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[F1]' value='[country_vaccinations_cleaned.csv].[F1]' />
          <map key='[country]' value='[country_vaccinations_cleaned.csv].[country]' />
          <map key='[daily_vaccinations]' value='[country_vaccinations_cleaned.csv].[daily_vaccinations]' />
          <map key='[daily_vaccinations_per_million]' value='[country_vaccinations_cleaned.csv].[daily_vaccinations_per_million]' />
          <map key='[daily_vaccinations_raw]' value='[country_vaccinations_cleaned.csv].[daily_vaccinations_raw]' />
          <map key='[date (country_vaccinations_by_manufacturer.csv)]' value='[country_vaccinations_by_manufacturer.csv].[date]' />
          <map key='[date]' value='[country_vaccinations_cleaned.csv].[date]' />
          <map key='[iso_code]' value='[country_vaccinations_cleaned.csv].[iso_code]' />
          <map key='[location]' value='[country_vaccinations_by_manufacturer.csv].[location]' />
          <map key='[month]' value='[country_vaccinations_cleaned.csv].[month]' />
          <map key='[people_fully_vaccinated]' value='[country_vaccinations_cleaned.csv].[people_fully_vaccinated]' />
          <map key='[people_fully_vaccinated_per_hundred]' value='[country_vaccinations_cleaned.csv].[people_fully_vaccinated_per_hundred]' />
          <map key='[people_vaccinated]' value='[country_vaccinations_cleaned.csv].[people_vaccinated]' />
          <map key='[people_vaccinated_per_hundred]' value='[country_vaccinations_cleaned.csv].[people_vaccinated_per_hundred]' />
          <map key='[source_name]' value='[country_vaccinations_cleaned.csv].[source_name]' />
          <map key='[source_website]' value='[country_vaccinations_cleaned.csv].[source_website]' />
          <map key='[total_vaccinations (country_vaccinations_by_manufacturer.csv)]' value='[country_vaccinations_by_manufacturer.csv].[total_vaccinations]' />
          <map key='[total_vaccinations]' value='[country_vaccinations_cleaned.csv].[total_vaccinations]' />
          <map key='[total_vaccinations_per_hundred]' value='[country_vaccinations_cleaned.csv].[total_vaccinations_per_hundred]' />
          <map key='[vaccine]' value='[country_vaccinations_by_manufacturer.csv].[vaccine]' />
          <map key='[vaccines]' value='[country_vaccinations_cleaned.csv].[vaccines]' />
          <map key='[year]' value='[country_vaccinations_cleaned.csv].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[country_vaccinations_by_manufacturer.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_8DF24BD58A5B4341B2695D6982B426C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_8DF24BD58A5B4341B2695D6982B426C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_8DF24BD58A5B4341B2695D6982B426C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_8DF24BD58A5B4341B2695D6982B426C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations]</local-name>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias>total_vaccinations</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_8DF24BD58A5B4341B2695D6982B426C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated]</local-name>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias>people_vaccinated</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_8DF24BD58A5B4341B2695D6982B426C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated]</local-name>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_8DF24BD58A5B4341B2695D6982B426C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_vaccinations_raw</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_vaccinations_raw]</local-name>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias>daily_vaccinations_raw</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_8DF24BD58A5B4341B2695D6982B426C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_vaccinations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_vaccinations]</local-name>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias>daily_vaccinations</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_8DF24BD58A5B4341B2695D6982B426C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations_per_hundred]</local-name>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias>total_vaccinations_per_hundred</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_8DF24BD58A5B4341B2695D6982B426C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated_per_hundred]</local-name>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias>people_vaccinated_per_hundred</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_8DF24BD58A5B4341B2695D6982B426C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated_per_hundred]</local-name>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_8DF24BD58A5B4341B2695D6982B426C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_vaccinations_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_vaccinations_per_million]</local-name>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias>daily_vaccinations_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_8DF24BD58A5B4341B2695D6982B426C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vaccines</remote-name>
            <remote-type>129</remote-type>
            <local-name>[vaccines]</local-name>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias>vaccines</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_8DF24BD58A5B4341B2695D6982B426C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source_name]</local-name>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias>source_name</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_8DF24BD58A5B4341B2695D6982B426C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source_website</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source_website]</local-name>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias>source_website</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_8DF24BD58A5B4341B2695D6982B426C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_8DF24BD58A5B4341B2695D6982B426C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_8DF24BD58A5B4341B2695D6982B426C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[country_vaccinations_by_manufacturer.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_8DF24BD58A5B4341B2695D6982B426C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date (country_vaccinations_by_manufacturer.csv)]</local-name>
            <parent-name>[country_vaccinations_by_manufacturer.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>19</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_8DF24BD58A5B4341B2695D6982B426C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vaccine</remote-name>
            <remote-type>129</remote-type>
            <local-name>[vaccine]</local-name>
            <parent-name>[country_vaccinations_by_manufacturer.csv]</parent-name>
            <remote-alias>vaccine</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_8DF24BD58A5B4341B2695D6982B426C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_vaccinations (country_vaccinations_by_manufacturer.csv)]</local-name>
            <parent-name>[country_vaccinations_by_manufacturer.csv]</parent-name>
            <remote-alias>total_vaccinations</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_8DF24BD58A5B4341B2695D6982B426C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Size1' datatype='string' name='[Size]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='country_vaccinations_cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[country_vaccinations_cleaned.csv_8DF24BD58A5B4341B2695D6982B426C5]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Daily Vaccinations' datatype='real' name='[daily_vaccinations]' role='measure' type='quantitative' />
      <column caption='Daily Vaccinations Per Million' datatype='real' name='[daily_vaccinations_per_million]' role='measure' type='quantitative' />
      <column caption='Daily Vaccinations Raw' datatype='real' name='[daily_vaccinations_raw]' role='measure' type='quantitative' />
      <column caption='Date (Country Vaccinations By Manufacturer.Csv)' datatype='date' name='[date (country_vaccinations_by_manufacturer.csv)]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
      <column caption='People Fully Vaccinated' datatype='real' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated Per Hundred' datatype='real' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='People Vaccinated' datatype='real' name='[people_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Vaccinated Per Hundred' datatype='real' name='[people_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='Source Name' datatype='string' name='[source_name]' role='dimension' type='nominal' />
      <column caption='Source Website' datatype='string' name='[source_website]' role='dimension' type='nominal' />
      <column caption='Total Vaccinations (Country Vaccinations By Manufacturer.Csv)' datatype='integer' name='[total_vaccinations (country_vaccinations_by_manufacturer.csv)]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations' datatype='real' name='[total_vaccinations]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations Per Hundred' datatype='real' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative' />
      <column caption='Vaccine' datatype='string' name='[vaccine]' role='dimension' type='nominal' />
      <column caption='Vaccines' datatype='string' name='[vaccines]' role='dimension' type='nominal' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='country_vaccinations_cleaned.csv' id='country_vaccinations_cleaned.csv_8DF24BD58A5B4341B2695D6982B426C5'>
            <properties context=''>
              <relation join='left' type='join'>
                <clause type='join'>
                  <expression op='AND'>
                    <expression op='='>
                      <expression op='[country_vaccinations_cleaned.csv].[date]' />
                      <expression op='[country_vaccinations_by_manufacturer.csv].[date]' />
                    </expression>
                    <expression op='='>
                      <expression op='[country_vaccinations_cleaned.csv].[country]' />
                      <expression op='[country_vaccinations_by_manufacturer.csv].[location]' />
                    </expression>
                  </expression>
                </clause>
                <relation connection='textscan.0emn5nk0itom1b1fuhejj06a0y23' name='country_vaccinations_cleaned.csv' table='[country_vaccinations_cleaned#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='F1' ordinal='0' />
                    <column datatype='string' name='country' ordinal='1' />
                    <column datatype='string' name='iso_code' ordinal='2' />
                    <column datatype='date' name='date' ordinal='3' />
                    <column datatype='real' name='total_vaccinations' ordinal='4' />
                    <column datatype='real' name='people_vaccinated' ordinal='5' />
                    <column datatype='real' name='people_fully_vaccinated' ordinal='6' />
                    <column datatype='real' name='daily_vaccinations_raw' ordinal='7' />
                    <column datatype='real' name='daily_vaccinations' ordinal='8' />
                    <column datatype='real' name='total_vaccinations_per_hundred' ordinal='9' />
                    <column datatype='real' name='people_vaccinated_per_hundred' ordinal='10' />
                    <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='11' />
                    <column datatype='real' name='daily_vaccinations_per_million' ordinal='12' />
                    <column datatype='string' name='vaccines' ordinal='13' />
                    <column datatype='string' name='source_name' ordinal='14' />
                    <column datatype='string' name='source_website' ordinal='15' />
                    <column datatype='integer' name='year' ordinal='16' />
                    <column datatype='integer' name='month' ordinal='17' />
                  </columns>
                </relation>
                <relation connection='textscan.1i0dqhi15nq2bg1dcjoht1saoyry' name='country_vaccinations_by_manufacturer.csv' table='[country_vaccinations_by_manufacturer#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='string' name='location' ordinal='0' />
                    <column datatype='date' name='date' ordinal='1' />
                    <column datatype='string' name='vaccine' ordinal='2' />
                    <column datatype='integer' name='total_vaccinations' ordinal='3' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='covid' inline='true' name='federated.0sorwhr1v4yx8t1aaop3n1wupqma' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1lb58b41nyctae1dal19a1fjd7ss'>
            <connection class='mysql' dbname='' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
          <named-connection caption='country_vaccinations_cleaned' name='textscan.1oey2xt1mt437618y9jbj16bcpso'>
            <connection class='textscan' directory='/Users/yasamanemami/Documents/DATA-230 Sec 23 - Data Visualization/hw1' filename='country_vaccinations_cleaned.csv' password='' server='' />
          </named-connection>
          <named-connection caption='country_vaccinations_by_manufacturer' name='textscan.0p0lc0k0hxsyeo1b6yyvl0dmesja'>
            <connection class='textscan' directory='/Users/yasamanemami/Documents/DATA-230 Sec 23 - Data Visualization/hw1/covid ds' filename='country_vaccinations_by_manufacturer.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='left' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[country_vaccinations_cleaned.csv].[date]' />
                <expression op='[country_vaccinations_by_manufacturer.csv].[date]' />
              </expression>
              <expression op='='>
                <expression op='[country_vaccinations_cleaned.csv].[country]' />
                <expression op='[country_vaccinations_by_manufacturer.csv].[location]' />
              </expression>
            </expression>
          </clause>
          <relation connection='textscan.1oey2xt1mt437618y9jbj16bcpso' name='country_vaccinations_cleaned.csv' table='[country_vaccinations_cleaned#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='country' ordinal='1' />
              <column datatype='string' name='iso_code' ordinal='2' />
              <column datatype='date' name='date' ordinal='3' />
              <column datatype='real' name='total_vaccinations' ordinal='4' />
              <column datatype='real' name='people_vaccinated' ordinal='5' />
              <column datatype='real' name='people_fully_vaccinated' ordinal='6' />
              <column datatype='real' name='daily_vaccinations_raw' ordinal='7' />
              <column datatype='real' name='daily_vaccinations' ordinal='8' />
              <column datatype='real' name='total_vaccinations_per_hundred' ordinal='9' />
              <column datatype='real' name='people_vaccinated_per_hundred' ordinal='10' />
              <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='11' />
              <column datatype='real' name='daily_vaccinations_per_million' ordinal='12' />
              <column datatype='string' name='vaccines' ordinal='13' />
              <column datatype='string' name='source_name' ordinal='14' />
              <column datatype='string' name='source_website' ordinal='15' />
              <column datatype='integer' name='year' ordinal='16' />
              <column datatype='integer' name='month' ordinal='17' />
            </columns>
          </relation>
          <relation connection='textscan.0p0lc0k0hxsyeo1b6yyvl0dmesja' name='country_vaccinations_by_manufacturer.csv' table='[country_vaccinations_by_manufacturer#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='location' ordinal='0' />
              <column datatype='date' name='date' ordinal='1' />
              <column datatype='string' name='vaccine' ordinal='2' />
              <column datatype='integer' name='total_vaccinations' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='left' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[country_vaccinations_cleaned.csv].[date]' />
                <expression op='[country_vaccinations_by_manufacturer.csv].[date]' />
              </expression>
              <expression op='='>
                <expression op='[country_vaccinations_cleaned.csv].[country]' />
                <expression op='[country_vaccinations_by_manufacturer.csv].[location]' />
              </expression>
            </expression>
          </clause>
          <relation connection='textscan.1oey2xt1mt437618y9jbj16bcpso' name='country_vaccinations_cleaned.csv' table='[country_vaccinations_cleaned#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='country' ordinal='1' />
              <column datatype='string' name='iso_code' ordinal='2' />
              <column datatype='date' name='date' ordinal='3' />
              <column datatype='real' name='total_vaccinations' ordinal='4' />
              <column datatype='real' name='people_vaccinated' ordinal='5' />
              <column datatype='real' name='people_fully_vaccinated' ordinal='6' />
              <column datatype='real' name='daily_vaccinations_raw' ordinal='7' />
              <column datatype='real' name='daily_vaccinations' ordinal='8' />
              <column datatype='real' name='total_vaccinations_per_hundred' ordinal='9' />
              <column datatype='real' name='people_vaccinated_per_hundred' ordinal='10' />
              <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='11' />
              <column datatype='real' name='daily_vaccinations_per_million' ordinal='12' />
              <column datatype='string' name='vaccines' ordinal='13' />
              <column datatype='string' name='source_name' ordinal='14' />
              <column datatype='string' name='source_website' ordinal='15' />
              <column datatype='integer' name='year' ordinal='16' />
              <column datatype='integer' name='month' ordinal='17' />
            </columns>
          </relation>
          <relation connection='textscan.0p0lc0k0hxsyeo1b6yyvl0dmesja' name='country_vaccinations_by_manufacturer.csv' table='[country_vaccinations_by_manufacturer#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='location' ordinal='0' />
              <column datatype='date' name='date' ordinal='1' />
              <column datatype='string' name='vaccine' ordinal='2' />
              <column datatype='integer' name='total_vaccinations' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[F1]' value='[country_vaccinations_cleaned.csv].[F1]' />
          <map key='[country]' value='[country_vaccinations_cleaned.csv].[country]' />
          <map key='[daily_vaccinations]' value='[country_vaccinations_cleaned.csv].[daily_vaccinations]' />
          <map key='[daily_vaccinations_per_million]' value='[country_vaccinations_cleaned.csv].[daily_vaccinations_per_million]' />
          <map key='[daily_vaccinations_raw]' value='[country_vaccinations_cleaned.csv].[daily_vaccinations_raw]' />
          <map key='[date (country_vaccinations_by_manufacturer.csv)]' value='[country_vaccinations_by_manufacturer.csv].[date]' />
          <map key='[date]' value='[country_vaccinations_cleaned.csv].[date]' />
          <map key='[iso_code]' value='[country_vaccinations_cleaned.csv].[iso_code]' />
          <map key='[location]' value='[country_vaccinations_by_manufacturer.csv].[location]' />
          <map key='[month]' value='[country_vaccinations_cleaned.csv].[month]' />
          <map key='[people_fully_vaccinated]' value='[country_vaccinations_cleaned.csv].[people_fully_vaccinated]' />
          <map key='[people_fully_vaccinated_per_hundred]' value='[country_vaccinations_cleaned.csv].[people_fully_vaccinated_per_hundred]' />
          <map key='[people_vaccinated]' value='[country_vaccinations_cleaned.csv].[people_vaccinated]' />
          <map key='[people_vaccinated_per_hundred]' value='[country_vaccinations_cleaned.csv].[people_vaccinated_per_hundred]' />
          <map key='[source_name]' value='[country_vaccinations_cleaned.csv].[source_name]' />
          <map key='[source_website]' value='[country_vaccinations_cleaned.csv].[source_website]' />
          <map key='[total_vaccinations (country_vaccinations_by_manufacturer.csv)]' value='[country_vaccinations_by_manufacturer.csv].[total_vaccinations]' />
          <map key='[total_vaccinations]' value='[country_vaccinations_cleaned.csv].[total_vaccinations]' />
          <map key='[total_vaccinations_per_hundred]' value='[country_vaccinations_cleaned.csv].[total_vaccinations_per_hundred]' />
          <map key='[vaccine]' value='[country_vaccinations_by_manufacturer.csv].[vaccine]' />
          <map key='[vaccines]' value='[country_vaccinations_cleaned.csv].[vaccines]' />
          <map key='[year]' value='[country_vaccinations_cleaned.csv].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[country_vaccinations_by_manufacturer.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_28B1860A74F549A7ACB574277ADEDF19]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_28B1860A74F549A7ACB574277ADEDF19]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_28B1860A74F549A7ACB574277ADEDF19]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_28B1860A74F549A7ACB574277ADEDF19]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations]</local-name>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias>total_vaccinations</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_28B1860A74F549A7ACB574277ADEDF19]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated]</local-name>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias>people_vaccinated</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_28B1860A74F549A7ACB574277ADEDF19]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated]</local-name>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_28B1860A74F549A7ACB574277ADEDF19]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_vaccinations_raw</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_vaccinations_raw]</local-name>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias>daily_vaccinations_raw</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_28B1860A74F549A7ACB574277ADEDF19]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_vaccinations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_vaccinations]</local-name>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias>daily_vaccinations</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_28B1860A74F549A7ACB574277ADEDF19]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations_per_hundred]</local-name>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias>total_vaccinations_per_hundred</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_28B1860A74F549A7ACB574277ADEDF19]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated_per_hundred]</local-name>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias>people_vaccinated_per_hundred</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_28B1860A74F549A7ACB574277ADEDF19]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated_per_hundred]</local-name>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_28B1860A74F549A7ACB574277ADEDF19]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_vaccinations_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_vaccinations_per_million]</local-name>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias>daily_vaccinations_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_28B1860A74F549A7ACB574277ADEDF19]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vaccines</remote-name>
            <remote-type>129</remote-type>
            <local-name>[vaccines]</local-name>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias>vaccines</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_28B1860A74F549A7ACB574277ADEDF19]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source_name]</local-name>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias>source_name</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_28B1860A74F549A7ACB574277ADEDF19]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source_website</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source_website]</local-name>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias>source_website</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_28B1860A74F549A7ACB574277ADEDF19]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_28B1860A74F549A7ACB574277ADEDF19]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[country_vaccinations_cleaned.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_28B1860A74F549A7ACB574277ADEDF19]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[country_vaccinations_by_manufacturer.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_28B1860A74F549A7ACB574277ADEDF19]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date (country_vaccinations_by_manufacturer.csv)]</local-name>
            <parent-name>[country_vaccinations_by_manufacturer.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>19</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_28B1860A74F549A7ACB574277ADEDF19]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vaccine</remote-name>
            <remote-type>129</remote-type>
            <local-name>[vaccine]</local-name>
            <parent-name>[country_vaccinations_by_manufacturer.csv]</parent-name>
            <remote-alias>vaccine</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_28B1860A74F549A7ACB574277ADEDF19]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_vaccinations (country_vaccinations_by_manufacturer.csv)]</local-name>
            <parent-name>[country_vaccinations_by_manufacturer.csv]</parent-name>
            <remote-alias>total_vaccinations</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_vaccinations_cleaned.csv_28B1860A74F549A7ACB574277ADEDF19]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([total_vaccinations]) / TOTAL(SUM([total_vaccinations]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([total_vaccinations]) / TOTAL(SUM([total_vaccinations]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation4]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([total_vaccinations (country_vaccinations_by_manufacturer.csv)]) / TOTAL(SUM([total_vaccinations (country_vaccinations_by_manufacturer.csv)]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation5]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([total_vaccinations (country_vaccinations_by_manufacturer.csv)]) / TOTAL(SUM([total_vaccinations (country_vaccinations_by_manufacturer.csv)]))'>
          <table-calc ordering-field='[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:Calculation_7017030440502128642:nk]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='real' name='[Calculation6]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_PERCENTILE(ATTR([total_vaccinations (country_vaccinations_by_manufacturer.csv)]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation7]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([total_vaccinations (country_vaccinations_by_manufacturer.csv)]) / TOTAL(SUM([total_vaccinations (country_vaccinations_by_manufacturer.csv)]))'>
          <table-calc ordering-type='Field'>
            <order field='[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:Calculation_7017030440502128642:nk]' />
            <order field='[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:country:nk]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='Calculation3' datatype='string' name='[Calculation_7017030440502128642]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IFNULL([vaccine],&apos;Unknown&apos;)' />
      </column>
      <column datatype='integer' name='[People Fully Vaccinated (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='7' formula='[people_fully_vaccinated]' peg='0' size='1.7222e+07' />
      </column>
      <column datatype='integer' name='[Total Vaccinations (Country Vaccinations By Manufacturer.Csv) (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='6' formula='[total_vaccinations (country_vaccinations_by_manufacturer.csv)]' peg='0' size='4.89178e+06' />
      </column>
      <column datatype='integer' name='[Total Vaccinations (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='7' formula='[total_vaccinations]' peg='0' size='4.23573e+07' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='country_vaccinations_cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[country_vaccinations_cleaned.csv_28B1860A74F549A7ACB574277ADEDF19]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Daily Vaccinations' datatype='real' name='[daily_vaccinations]' role='measure' type='quantitative' />
      <column caption='Daily Vaccinations Per Million' datatype='real' name='[daily_vaccinations_per_million]' role='measure' type='quantitative' />
      <column caption='Daily Vaccinations Raw' datatype='real' name='[daily_vaccinations_raw]' role='measure' type='quantitative' />
      <column caption='Date (Country Vaccinations By Manufacturer.Csv)' datatype='date' name='[date (country_vaccinations_by_manufacturer.csv)]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
      <column caption='People Fully Vaccinated' datatype='real' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated Per Hundred' datatype='real' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='People Vaccinated' datatype='real' name='[people_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Vaccinated Per Hundred' datatype='real' name='[people_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='Source Name' datatype='string' name='[source_name]' role='dimension' type='nominal' />
      <column caption='Source Website' datatype='string' name='[source_website]' role='dimension' type='nominal' />
      <column caption='Total Vaccinations (Country Vaccinations By Manufacturer.Csv)' datatype='integer' name='[total_vaccinations (country_vaccinations_by_manufacturer.csv)]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations' datatype='real' name='[total_vaccinations]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations Per Hundred' datatype='real' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative' />
      <column caption='Vaccine' datatype='string' name='[vaccine]' role='dimension' type='nominal' />
      <column caption='Vaccines' datatype='string' name='[vaccines]' role='dimension' type='nominal' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[total_vaccinations (country_vaccinations_by_manufacturer.csv)]' derivation='Sum' name='[diff:sum:total_vaccinations (country_vaccinations_by_manufacturer.csv):qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_7017030440502128642]' derivation='None' name='[none:Calculation_7017030440502128642:nk]' pivot='key' type='nominal' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[total_vaccinations (country_vaccinations_by_manufacturer.csv)]' derivation='Sum' name='[pcto:sum:total_vaccinations (country_vaccinations_by_manufacturer.csv):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[people_fully_vaccinated]' derivation='Sum' name='[sum:people_fully_vaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_vaccinations (country_vaccinations_by_manufacturer.csv)]' derivation='Sum' name='[sum:total_vaccinations (country_vaccinations_by_manufacturer.csv):qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[sum:people_fully_vaccinated:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[diff:sum:total_vaccinations (country_vaccinations_by_manufacturer.csv):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[pcto:sum:total_vaccinations (country_vaccinations_by_manufacturer.csv):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[sum:total_vaccinations (country_vaccinations_by_manufacturer.csv):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_7017030440502128642:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;CanSino&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oxford/AstraZeneca&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Novavax&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Sputnik V&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sinopharm/Beijing&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Unknown&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moderna&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Pfizer/BioNTech&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Johnson&amp;Johnson&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Sinovac&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='country' />
        <field-sort-custom-order field='iso_code' />
        <field-sort-custom-order field='date' />
        <field-sort-custom-order field='total_vaccinations' />
        <field-sort-custom-order field='people_vaccinated' />
        <field-sort-custom-order field='people_fully_vaccinated' />
        <field-sort-custom-order field='daily_vaccinations_raw' />
        <field-sort-custom-order field='daily_vaccinations' />
        <field-sort-custom-order field='total_vaccinations_per_hundred' />
        <field-sort-custom-order field='people_vaccinated_per_hundred' />
        <field-sort-custom-order field='people_fully_vaccinated_per_hundred' />
        <field-sort-custom-order field='daily_vaccinations_per_million' />
        <field-sort-custom-order field='vaccines' />
        <field-sort-custom-order field='source_name' />
        <field-sort-custom-order field='source_website' />
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='month' />
        <field-sort-custom-order field='location' />
        <field-sort-custom-order field='date (country_vaccinations_by_manufacturer.csv)' />
        <field-sort-custom-order field='vaccine' />
        <field-sort-custom-order field='Calculation_7017030440502128642' />
        <field-sort-custom-order field='total_vaccinations (country_vaccinations_by_manufacturer.csv)' />
        <field-sort-custom-order field='Total Vaccinations (Country Vaccinations By Manufacturer.Csv) (bin)' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='country_vaccinations_cleaned.csv' id='country_vaccinations_cleaned.csv_28B1860A74F549A7ACB574277ADEDF19'>
            <properties context=''>
              <relation join='left' type='join'>
                <clause type='join'>
                  <expression op='AND'>
                    <expression op='='>
                      <expression op='[country_vaccinations_cleaned.csv].[date]' />
                      <expression op='[country_vaccinations_by_manufacturer.csv].[date]' />
                    </expression>
                    <expression op='='>
                      <expression op='[country_vaccinations_cleaned.csv].[country]' />
                      <expression op='[country_vaccinations_by_manufacturer.csv].[location]' />
                    </expression>
                  </expression>
                </clause>
                <relation connection='textscan.1oey2xt1mt437618y9jbj16bcpso' name='country_vaccinations_cleaned.csv' table='[country_vaccinations_cleaned#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='F1' ordinal='0' />
                    <column datatype='string' name='country' ordinal='1' />
                    <column datatype='string' name='iso_code' ordinal='2' />
                    <column datatype='date' name='date' ordinal='3' />
                    <column datatype='real' name='total_vaccinations' ordinal='4' />
                    <column datatype='real' name='people_vaccinated' ordinal='5' />
                    <column datatype='real' name='people_fully_vaccinated' ordinal='6' />
                    <column datatype='real' name='daily_vaccinations_raw' ordinal='7' />
                    <column datatype='real' name='daily_vaccinations' ordinal='8' />
                    <column datatype='real' name='total_vaccinations_per_hundred' ordinal='9' />
                    <column datatype='real' name='people_vaccinated_per_hundred' ordinal='10' />
                    <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='11' />
                    <column datatype='real' name='daily_vaccinations_per_million' ordinal='12' />
                    <column datatype='string' name='vaccines' ordinal='13' />
                    <column datatype='string' name='source_name' ordinal='14' />
                    <column datatype='string' name='source_website' ordinal='15' />
                    <column datatype='integer' name='year' ordinal='16' />
                    <column datatype='integer' name='month' ordinal='17' />
                  </columns>
                </relation>
                <relation connection='textscan.0p0lc0k0hxsyeo1b6yyvl0dmesja' name='country_vaccinations_by_manufacturer.csv' table='[country_vaccinations_by_manufacturer#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='string' name='location' ordinal='0' />
                    <column datatype='date' name='date' ordinal='1' />
                    <column datatype='string' name='vaccine' ordinal='2' />
                    <column datatype='integer' name='total_vaccinations' ordinal='3' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Covid Vaccine Make Analysis by country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid' name='federated.0sorwhr1v4yx8t1aaop3n1wupqma' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0sorwhr1v4yx8t1aaop3n1wupqma'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[vaccine]' derivation='None' name='[none:vaccine:nk]' pivot='key' type='nominal' />
            <column caption='Vaccine' datatype='string' name='[vaccine]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:vaccine:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:vaccine:nk]' />
              <groupfilter function='member' level='[none:vaccine:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:vaccine:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:country:nk]' />
              <geometry column='[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:vaccine:nk] * [federated.0sorwhr1v4yx8t1aaop3n1wupqma].[Latitude (generated)])</rows>
        <cols>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D72620B2-FE4B-4DF9-8C81-35417208AFE4}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Fully Vaccinated Individulas From Dec2020 to Dec2022</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid' name='federated.0sorwhr1v4yx8t1aaop3n1wupqma' />
          </datasources>
          <datasource-dependencies datasource='federated.0sorwhr1v4yx8t1aaop3n1wupqma'>
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='People Fully Vaccinated' datatype='real' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
            <column-instance column='[people_fully_vaccinated]' derivation='Sum' name='[sum:people_fully_vaccinated:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:year:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='15' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[sum:people_fully_vaccinated:qk]</rows>
        <cols>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{4114E9F7-4871-4A02-AFC4-280B2136F21E}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='ready_salary' name='federated.0o2cl5h06ly0vp18hy58a0z3sslm' />
          </datasources>
          <datasource-dependencies datasource='federated.0o2cl5h06ly0vp18hy58a0z3sslm'>
            <column caption='Size1' datatype='string' name='[Size]' role='dimension' type='nominal' />
            <column-instance column='[Size]' derivation='None' name='[none:Size:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0o2cl5h06ly0vp18hy58a0z3sslm].[none:Size:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{3CBDD1FE-B1C8-46CE-ABDA-E84D1C7C415E}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid' name='federated.0sorwhr1v4yx8t1aaop3n1wupqma' />
          </datasources>
          <datasource-dependencies datasource='federated.0sorwhr1v4yx8t1aaop3n1wupqma'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_vaccinations (country_vaccinations_by_manufacturer.csv)]' derivation='Sum' name='[sum:total_vaccinations (country_vaccinations_by_manufacturer.csv):qk]' pivot='key' type='quantitative' />
            <column caption='Total Vaccinations (Country Vaccinations By Manufacturer.Csv)' datatype='integer' name='[total_vaccinations (country_vaccinations_by_manufacturer.csv)]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:location:nk]'>
            <groupfilter expression='[location] = &apos;United States&apos;' function='filter' user:ui-marker='filter-by'>
              <groupfilter from='&quot;Austria&quot;' function='range' level='[none:location:nk]' to='&quot;Uruguay&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[sum:total_vaccinations (country_vaccinations_by_manufacturer.csv):qk]' />
              <text column='[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:location:nk]' />
              <color column='[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{FDE89FFD-8855-4253-86B8-29144AA98122}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid' name='federated.0sorwhr1v4yx8t1aaop3n1wupqma' />
          </datasources>
          <datasource-dependencies datasource='federated.0sorwhr1v4yx8t1aaop3n1wupqma'>
            <column-instance column='[vaccine]' derivation='None' name='[none:vaccine:nk]' pivot='key' type='nominal' />
            <column caption='Vaccine' datatype='string' name='[vaccine]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:vaccine:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{ABE077AC-92AC-48A7-A20E-CB26D23089E6}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Covid Vaccine Brand Analysis </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid' name='federated.0sorwhr1v4yx8t1aaop3n1wupqma' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0sorwhr1v4yx8t1aaop3n1wupqma'>
            <column caption='Calculation3' datatype='string' name='[Calculation_7017030440502128642]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IFNULL([vaccine],&apos;Unknown&apos;)' />
            </column>
            <column-instance column='[Calculation_7017030440502128642]' derivation='None' name='[none:Calculation_7017030440502128642:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_vaccinations (country_vaccinations_by_manufacturer.csv)]' derivation='Sum' name='[pcto:sum:total_vaccinations (country_vaccinations_by_manufacturer.csv):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[total_vaccinations (country_vaccinations_by_manufacturer.csv)]' derivation='Sum' name='[sum:total_vaccinations (country_vaccinations_by_manufacturer.csv):qk]' pivot='key' type='quantitative' />
            <column caption='Total Vaccinations (Country Vaccinations By Manufacturer.Csv)' datatype='integer' name='[total_vaccinations (country_vaccinations_by_manufacturer.csv)]' role='measure' type='quantitative' />
            <column caption='Vaccine' datatype='string' name='[vaccine]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:Calculation_7017030440502128642:nk]' direction='ASC' using='[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[sum:total_vaccinations (country_vaccinations_by_manufacturer.csv):qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:Calculation_7017030440502128642:nk]' />
              <wedge-size column='[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[pcto:sum:total_vaccinations (country_vaccinations_by_manufacturer.csv):qk]' />
              <size column='[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[sum:total_vaccinations (country_vaccinations_by_manufacturer.csv):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3470E4BB-4CE8-457D-A202-451054D00B1F}' />
    </worksheet>
    <worksheet name='Sheet 7 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Covid Vaccine Manufacture Analysis by Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid' name='federated.0sorwhr1v4yx8t1aaop3n1wupqma' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0sorwhr1v4yx8t1aaop3n1wupqma'>
            <column caption='Calculation3' datatype='string' name='[Calculation_7017030440502128642]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IFNULL([vaccine],&apos;Unknown&apos;)' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Calculation_7017030440502128642]' derivation='None' name='[none:Calculation_7017030440502128642:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_vaccinations (country_vaccinations_by_manufacturer.csv)]' derivation='Sum' name='[sum:total_vaccinations (country_vaccinations_by_manufacturer.csv):qk]' pivot='key' type='quantitative' />
            <column caption='Total Vaccinations (Country Vaccinations By Manufacturer.Csv)' datatype='integer' name='[total_vaccinations (country_vaccinations_by_manufacturer.csv)]' role='measure' type='quantitative' />
            <column caption='Vaccine' datatype='string' name='[vaccine]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[sum:total_vaccinations (country_vaccinations_by_manufacturer.csv):qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[sum:total_vaccinations (country_vaccinations_by_manufacturer.csv):qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='15' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:Calculation_7017030440502128642:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:country:nk]</rows>
        <cols>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[sum:total_vaccinations (country_vaccinations_by_manufacturer.csv):qk]</cols>
      </table>
      <simple-id uuid='{04D74E67-3199-4FEB-B669-046ED5088286}' />
    </worksheet>
  </worksheets>
  <windows film-mode='true' source-height='51'>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:country:nk]</field>
            <field>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:vaccine:nk]</field>
            <field>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[sum:total_vaccinations:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A49E180A-0C38-4618-87A6-CEF4A49EB89D}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[:Measure Names]</field>
            <field>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:People Fully Vaccinated (bin):qk]</field>
            <field>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:country:nk]</field>
            <field>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:month:qk]</field>
            <field>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F5DD201A-BF9A-4A82-917D-4E3921E9A18A}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0o2cl5h06ly0vp18hy58a0z3sslm].[none:Company Name:nk]</field>
            <field>[federated.0o2cl5h06ly0vp18hy58a0z3sslm].[none:Headquarters:nk]</field>
            <field>[federated.0o2cl5h06ly0vp18hy58a0z3sslm].[none:Industry:nk]</field>
            <field>[federated.0o2cl5h06ly0vp18hy58a0z3sslm].[none:Job Title:nk]</field>
            <field>[federated.0o2cl5h06ly0vp18hy58a0z3sslm].[none:Location:nk]</field>
            <field>[federated.0o2cl5h06ly0vp18hy58a0z3sslm].[none:Rating:nk]</field>
            <field>[federated.0o2cl5h06ly0vp18hy58a0z3sslm].[none:Size:nk]</field>
            <field>[federated.0o2cl5h06ly0vp18hy58a0z3sslm].[none:bi:nk]</field>
            <field>[federated.0o2cl5h06ly0vp18hy58a0z3sslm].[none:mongo:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C0CE1CF4-BE1D-42AD-A85F-B7EC7F1D6B92}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:year:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:year:qk]</field>
            <field>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[sum:total_vaccinations (country_vaccinations_by_manufacturer.csv):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{78A3B411-605D-45DF-86DC-B37AAE5A23CA}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:vaccine:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F23782A3-4F98-47A2-8391-A622CDAE2C92}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:Calculation_7017030440502128642:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[sum:total_vaccinations (country_vaccinations_by_manufacturer.csv):qk]' type='size' />
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:Calculation_7017030440502128642:nk]</field>
            <field>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:Total Vaccinations (Country Vaccinations By Manufacturer.Csv) (bin):qk]</field>
            <field>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:country:nk]</field>
            <field>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:location:nk]</field>
            <field>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:month:qk]</field>
            <field>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:vaccine:nk]</field>
            <field>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:vaccines:nk]</field>
            <field>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:year:qk]</field>
            <field>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[sum:total_vaccinations (country_vaccinations_by_manufacturer.csv):qk]</field>
            <field>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[sum:total_vaccinations_per_hundred:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E4DE242D-4610-4A3C-85A8-E29108ACBB86}' />
    </window>
    <window class='worksheet' name='Sheet 7 (2)'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
            <card pane-specification-id='0' param='[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:Calculation_7017030440502128642:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:Calculation_7017030440502128642:nk]</field>
            <field>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:Total Vaccinations (Country Vaccinations By Manufacturer.Csv) (bin):qk]</field>
            <field>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:country:nk]</field>
            <field>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:location:nk]</field>
            <field>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:month:qk]</field>
            <field>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:vaccine:nk]</field>
            <field>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:vaccines:nk]</field>
            <field>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[none:year:qk]</field>
            <field>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[pcto:sum:total_vaccinations (country_vaccinations_by_manufacturer.csv):qk:2]</field>
            <field>[federated.0sorwhr1v4yx8t1aaop3n1wupqma].[sum:total_vaccinations_per_hundred:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{1DB2B8E2-627B-4B05-A4DC-9730762F6BC6}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Sheet 2' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAPsUlEQVR4nO3d/2+Vd/3/8cdpT6ErdNAV1mUUaKMpwmBRNwkuLJsxMdFETYx/l3/LotH4
      g4suTtjmxtgKY7KNAi0gbRHa0+9fznn/sHz4vCfK8D2+DJ+32y8l52pf1/O6fuid13U4odHp
      dDoBoJyuRz0AAI+GAAAUJQAART12AWi1Wo96BID/Co9dAAC4PwQAoCgBAChKAACKEgCAogQA
      oCgBAChKAACKEgCAopr//IJP2gLUcEcA+vv7H8Uc90ygAO4Pj4AAihIAgKIEAKAoAQAoSgAA
      ihIAgKIEAKAoAQAoSgAAihIAgKIEAKAoAQAoSgAAihIAgKIEAKAoAQAoSgAAihIAgKLuGoA3
      33wzv/vd75Ikr7/++kMZCICH447/E/ifbd26NTdv3kySLC8v57e//W26urry8ssv58yZM/nB
      D36QN954I3v37s358+ezurqaF198MYuLi9m/f3/ef//9tNvt3LhxI3v27Emn08mePXvywQcf
      5Ec/+lEajcYDv0gA7vSlj4COHTuWt99+O0ly7ty5vPrqq/n5z3+eDz/8MBsbG1leXk6j0ciO
      HTuydevWzM7O5tlnn83ExETGx8czNjaWnTt3pr+/P1NTU/nud7+b1157LYcOHfLLH+AR+tIA
      dHd3Z2BgIDMzM9m2bVvm5uaysLCQ3t7eHDhwIK+99lqef/75vPPOO3nllVfyzDPPpNFopNls
      5tatW3nqqady8eLFHD9+/PZu4plnnsmnn376MK4PgH/jro+A9u3bl2azme9973tZW1vL2NhY
      Tpw4kcuXL+f48ePp6enJhQsXsnPnzhw+fDhvvPFGnnrqqSTJkSNHMjs7myQZGhrKyZMnMzIy
      kpmZmfzsZz/L+fPns7m5me7u7gd/lQDcodHpdDqPeoj/RKvVSn9//6MeA+Cx55+BAhQlAABF
      CQBAUQIAUJQAABQlAABFCQBAUQIAUJQAABQlAABFCQBAUQIAUJQAABQlAABFCQBAUQIAUJQA
      ABQlAABFCQBAUQIAUJQAABQlAABFCQBAUQIAUJQAABQlAABFCQBAUQIAUJQAABQlAABFCQBA
      UQIAUJQAABQlAABFCQBAUQIAUJQAABQlAABFCQBAUQIAUJQAABQlAABFCQBAUQIAUJQAABQl
      AABFNTqdTud/v9BqtR7VLPdkbW0tW7ZsedRjADz27gjA112r1Up/f/+jHgPgsecREEBRAgBQ
      lAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJ
      AEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAA
      FCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBR
      XxqAdrud1dXVf3lsfn4+165d+9KTzM/P3/7zp59+miRZX1+/1xkBeADuGoDp6en8+te/zokT
      J/L222/fcfwPf/hDent7v/Qk7777bpLkH//4RxYXF7OyspJf/epX/zIsH3zwwb3ODsBX0Lzb
      wdOnT+enP/1puru78/vf/z6XLl1Kq9XK7OxshoaGcv369UxNTeXdd9/NxsZGBgcH09/fn4mJ
      iQwNDaWnpydTU1P5+9//niQ5e/Zsvv/97+f06dP5xS9+kbNnz+bIkSP5zW9+k97e3hw+fDgn
      T57M4uJiBgYGbq/zwgsvPJSbAVDJXXcAjUYj3d3dn39jV1f279+fv/3tb9m+fXsOHjyYAwcO
      5Lnnnkuj0ciPf/zjzM3NZX19PcPDw3nhhRdy/fr1/OQnP8nIyEiSZGNjI81mM5cuXUq73c7E
      xMTtR0yjo6PZt29fxsbG8tJLL31hHQDuv7sGYOfOnbl8+XI2NjayvLyc1dXVNJvNXL169f8v
      0NWVtbW1dDqdbGxsJEn27NmTJFlYWEi73c7GxkYmJyezd+/erK2tpaenJ729venu7k673c4v
      f/nLTE9P59q1a9nc3Ly99v9bZ3Fx8QtfAfjqGp1Op/PvDnY6nZw4cSJLS0s5evRobt26ld27
      d2dmZiaDg4OZmZnJ6Ohozp8/n8nJyRw6dChdXV3p7+9PX19fpqamcubMmfT392d9fT2vvPJK
      bt68mU6nc/vn2+12zp07lyR5+eWXc+HChdy4cSOjo6O31xkfH8+RI0cyPj6ekZGR9Pf3P7Qb
      BPDf6q4BuF86nU5OnjyZl1566Suv1Wq1BADgPngoAbifBADg/vBBMICiBACgKAEAKEoAAIoS
      AICiBACgKAEAKEoAAIoSAICiBACgKAEAKEoAAIoSAICiBACgKAEAKEoAAIoSAICiBACgKAEA
      KEoAAIoSAICiBACgKAEAKEoAAIoSAICiBACgKAEAKEoAAIoSAICiBACgKAEAKEoAAIoSAICi
      BACgKAEAKEoAAIoSAICiBACgKAEAKEoAAIoSAICiBACgKAEAKEoAAIpq/vMLq6urj2KOe7a5
      ufm1nxHgcWAHAFDUHTuArVu3Poo57tna2trXfkaAx4EdAEBRAgBQlAAAFCUAAEUJAEBRAgBQ
      lAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJ
      AEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAA
      FCUAAEUJAEBRAgBQlAAAFCUAAEUJAEBRAgBQlAAAFCUAAEU9lAC02+2HcRoA/gN3DcDc3Fwm
      JiZy5cqVtNvtzM7O5tSpU5mbm8vKyso9n+T06dOZmZnJxYsXMzk5mU6nk+np6X95vps3bybJ
      7a8APBh3DcD4+HhWV1czPT2djz/+OH/84x/T09OTlZWVbG5uZnJyMpcvX87S0lLm5+dz4cKF
      rK+vp9VqZWFhIXNzc2m322m1WnnvvfeSJJcuXcrVq1ezuLiYJLlx40YmJiayubmZ8fHx/PnP
      f06n08mpU6ce/NUDFPalj4AGBgayZcuW3Lp1K5ubm9m6dWtmZmaysrKStbW1nDx5MgsLC/nT
      n/6U+fn5/PWvf817772Xv/zlL1ldXc3ExERGR0eTJLdu3cqlS5eybdu2TE5OZm1tLW+99VYW
      Fxdv/8IfHh7OxYsXH+hFA3APATh37lwWFxfz4osv5umnn87Y2Fja7XY6nU76+vqyd+/e7Nq1
      K1evXs3y8nIWFhaysbGR48eP5+mnn87k5GSGh4fTaDSyY8eODA8PZ3Z2NhsbG7lx40b279+f
      w4cPZ25uLknyrW99Kx9//HE6nc4Dv3iAyr40AEePHs3Ro0ezZcuWL7zebrfz+uuvZ2hoKEtL
      SxkcHMzg4GDGxsbS3d2dbdu2ZX19Pc1mM11dXel0Omk0Gunr67v9pvDOnTszNTWViYmJ9Pb2
      fj5QV1e+8Y1v3N4FTExMpNVqZXZ29j5fOkBtjc5d/qo9NzeX7du3p7u7O8nnb8wODAxkYWEh
      zWYzV65cSbPZzODgYFZWVnLz5s0MDg6m0WhkYGAgZ86cydDQUHbv3p2ZmZksLi6mq6srw8PD
      mZuby8DAQK5evZqFhYXs378/Kysr6e/vT6PRyOXLl7N///5cv349Tz75ZNbX1/Pkk0+m1Wql
      v7//od0ggP9Wdw3AV/XRRx/l4MGDaTQa921NAQC4Px5oAB4EAQC4P3wSGKAoAQAoSgAAihIA
      gKIEAKAoAQAoSgAAihIAgKIEAKAoAQAoSgAAihIAgKIEAKAoAQAoSgAAihIAgKIEAKAoAQAo
      SgAAihIAgKIEAKAoAQAoSgAAihIAgKIEAKAoAQAoSgAAihIAgKIEAKAoAQAoSgAAihIAgKIE
      AKAoAQAoSgAAihIAgKIEAKAoAQAoSgAAihIAgKIEAKAoAQAoSgAAihIAgKKa//zC6urqo5jj
      nm1ubn7tZwR4HNgBABR1xw5g69atj2KOe7a2tva1nxHgcWAHAFCUAAAUJQAARQkAQFECAFCU
      AAAUJQAARQkAQFECAFCUAAAUJQAARQkAQFECAFCUAAAUJQAARQkAQFECAFCUAAAUJQAARQkA
      QFECAFCUAAAUJQAARQkAQFECAFCUAAAUJQAARQkAQFECAFCUAAAUJQAARQkAQFECAFCUAAAU
      JQAARQkAQFECAFCUAAAUJQAARQkAQFECAFCUAAAUJQAARQkAQFFf6wC02+1HPQLAf627BmBl
      ZSWfffZZpqam0m63Mz09/R8tfvny5a803OnTp7/SzwPw7zXvdvCdd97J8PBwlpaW0m63s7i4
      mOXl5czPz2d1dTV79+7N6upqrl69mt27d+eJJ57I9evXs76+nn379uWTTz5Jkmzbti0DAwO5
      cuVKGo1G9uzZk4WFhWxsbKS7uzuLi4tZW1tLX19fVlZWsnfv3rTb7bRarYdyEwAqumsAduzY
      kUuXLuXQoUNpNpuZnJzM0tJSZmdns7m5mb6+vnz44YcZHh7Om2++maNHj+bUqVMZHBzMyspK
      FhYW0mq1cvbs2fzwhz/M3NxcJicn02w28/7776fZbOab3/xmxsfHs3379nR1dWVpaSmDg4O5
      du1aRkdHH9Z9ACjnro+Ann/++Rw8eDBvvfVW5ufns7Gxkc3NzRw+fDgjIyNZWFhIu93O2NhY
      enp60m63MzIykmPHjuXKlSt58skn89xzz6W3t/f2TmFjYyO3bt1Kp9PJq6++mv7+/oyOjmZk
      ZCQjIyN59tlns7KyksnJyQwPDz+s+wBQzl0D8Nlnn2VlZSVbtmzJ5ubmF441Go0kn79ROzk5
      mdXV1TQajczMzOTs2bPZvXv3F75/eno6AwMDGRwcTJI88cQT6enp+ZfnXV9fT7PZTFdXVy5e
      vJh2u52JiYn/80UCcKe7PgIaHBzMzMxMDh8+nIGBgXznO99JT09Ptm7dmr6+vjQajduPa44d
      O5ZOp5PNzc1s3749+/bty/z8fJLk29/+dvr7+5MkPT092bVrV4aGhpJ8/pipt7c33d3daTQa
      2bVrVz755JMcOHAgSW6fp6+v70HeB4ByGp1Op3O/FlteXs7i4mJ27dr1ldb56KOPcvDgwdu7
      jP+t1WrdjgkA/3f3NQAPgwAA3B9f6w+CAfDgCABAUQIAUJQAABQlAABFCQBAUQIAUJQAABQl
      AABFCQBAUQIAUJQAABQlAABFCQBAUQIAUJQAABQlAABFCQBAUQIAUJQAABQlAABFCQBAUQIA
      UJQAABQlAABFCQBAUQIAUJQAABQlAABFCQBAUQIAUJQAABQlAABFCQBAUQIAUJQAABQlAABF
      CQBAUQIAUJQAABQlAABFCQBAUQIAUNT/ALM5REOXq50jAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Sheet 3' width='384'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Sheet 4' width='384'>
      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
      6qmnSCQSpNNpfvSjHxGPx/H7/bjdbgKBAAsLCyQSCaLRKA6HA7gsbZPJJLOzs7jd7mXnls1m
      SSaTTE9Py4VGIHxtqVSKYrEIXNa85ufnyWQy5PN54vE41WoVuBy40ev1FItFYrEYY2Nj5PN5
      OXw+k8kwNjZGqVTC6XSyadMmKpUK8XicWCzGpUuXePjhhzEYDJhMJgYHB/nFL35BMpmkWCzy
      8Y9/XFpUFy5c4OzZszz99NPY7fZr3vd4PE4ul8NgMHDPPfdgs9lIJpPkcjl+85vfUCwWsdls
      9PX1YTKZSKfTLCwscO7cOZlZs2/fPvL5POfOnePSpUukUina29tXPOb09DS5XI7e3l4ppMbG
      xigUCvzv//2/eeSRR+jt7V32EgqTtbu7mx07djA4OEixWOSFF17g4x//OP39/VLgTE5OUqvV
      SKVS1x1I1Gg0pPU3Pz9PtVrFbDazdetWZmdnGRsbw+/309fXh8/nw2q1EggEMJvNaLVaXn/9
      dcbHx/nSl74kBfvCwgJTU1PMzMxQr9evqSEPDAwwOzvLxMQEJpMJo9HI9u3bsdvt+P1+Gah9
      8803mZmZ4fz587hcLvbv308mk6FYLHLw4EF8Pp90T10Z+HM6nQwMDJBMJsnn8/L8tm7dKv99
      aUA9kUgwNDREKBSira2Nubk5eRy73U5vby82m41arcbk5CQGg0EKKcXaUa/XCYfD5HI56R60
      WCyYTCYSiYRcP6LR6LK1ym6309XVRXNzMw6HA6vVyqc+9SlOnDjBL37xC1KpFHBZKRbCfWBg
      gAceeACHw4FGo6Gvrw+tVotOp1umwN2RSE+lUiGbzRKJRJiZmWF+fp5EIiE/tmq1yvj4OJcu
      XcJiseD1eunp6cFkMlEqlZiYmJC+L2Hujo+PMzk5idVqxePx0NbWhl6vl4tXoVAALmePVCoV
      8vn8VWlUIoCYz+cplUrL/ia2F2Y/XA4e5vN5EokECwsLjIyMkM1m5Y3VarXU63WKxSLZbJZq
      tbpsIpmwbOLxOB6PB6/Xi8fjoVQqMTMzQ6FQoFKpUK/XpVaYSCSoVCq0tbURCoVwOp1Uq1Xi
      8bjc9koajQblcplqtYpOp8Pn89He3i5/Pz8/TzQaJZlMSgEmtNtUKiXnJweDQWklZDIZZmZm
      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
    </thumbnail>
    <thumbnail height='384' name='Sheet 5' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAaLElEQVR4nO3d2W8cSYLf8V/WfbB4ihRbPX1OH/LM7then7Axa9iAYRj+G/3iP8Dwyyww
      +7LADPZhjdn1TE+3RrdEUuJdrCurMqvyCD/omJZUJItkVWVWxvfTaKibUpcCbKG+FZGRkY4x
      xggAYJ1c0gMAACSDAACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQgA
      AFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQgA
      AFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQgA
      AFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQgA
      AFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQgA
      AFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQgA
      AFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQgA
      AFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQgA
      AFiKAACApQgAAFiKAACApQgAAFiKAACApQgAAFiKAACApQpJDwC4KWOMgjjSKI40ikONokhh
      HCk0scI4UhDHCk2s2MSKjFFkYsXGKDZGxhi9+uvV60iSI0eO8+afpJzjKOc4yju5tz/mnZwK
      uZyKubwKuZwKTl7FXF6lfF6lXEGlfF45Jycnwe8LcBkCgNQL41h+FGgQjuRHgfwo1DAK5Ieh
      /ChUEIcySQ9yjLyTUzlfUCVfUCVffP3PRVULr/4u5wpyHBKB5DjmzcceIEHGGA3jUP1gpH44
      fP3jSF440iiOkh7eTOTkvI5BSfVCSfViSUuFsmqFkvI5VmcxewQAcxcbo0E4Ui/w1Rv56gVD
      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
      MoVP/5L0/wHRO6tlVfevfgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Sheet 6' width='368'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Sheet 7' width='384'>
      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
      xpvNEAMXAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Sheet 7 (2)' width='384'>
      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
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
